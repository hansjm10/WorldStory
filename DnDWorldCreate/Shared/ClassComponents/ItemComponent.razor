@using DnDWorldCreate.Data.Entitys
@using DnDWorldCreate.Services
@inject ItemService _itemService
@inherits BaseClassComponent<Item, ItemService, ItemService>

<ListComponentItem @key="Entities" Label="Select Item" Items="Entities" OnSelected="OnEntitySelected" ItemsChanged="@_selectedEntityIsNew" />

<AddEditItem SaveButtonText="@(SelectedEntity == null ? "Save New Item" : "Update Item")" OnSave="OnSaveEntityAsync" OnDelete="OnDeleteEntityAsync" EditItem="@(SelectedEntity ?? new Item())" />

@code {
    protected override Func<ItemService, ItemService, Task<IEnumerable<Item>>> GetAllEntitysAsyncFunc => (service, unusedService) => service.GetAllAsync();
    protected override Func<ItemService, ItemService, Task<IReadOnlyList<Item>>> GetAllEntitysReadOnlyAsyncFunc => (service, unusedService) => service.GetAllReadOnlyAsync();
    protected override Func<ItemService, Item, Task> AddEntityAsyncFunc => (service, item) => service.AddAsync(item);
    protected override Func<ItemService, Item, Task> UpdateEntityAsyncFunc => (service, item) => service.UpdateAsync(item);
    protected override Func<ItemService, int, Task> DeleteEntityAsyncFunc => (service, id) => service.DeleteAsync(id);
    protected override int GetEntityId(Item item) => item.Id;
}