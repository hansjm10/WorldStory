@using DnDWorldCreate.Data.Entitys
@using DnDWorldCreate.Services
@inject TownService _townService
@inherits BaseClassComponent<Town, TownService, TownService>

<ListComponentTown Label="Select Town" Items="Entities" OnSelected="OnEntitySelected" ItemsChanged="@_selectedEntityIsNew" />

<AddEditTown SaveButtonText="@(SelectedEntity == null ? "Save New Town" : "Update Town")" OnSave="OnSaveEntityAsync" OnDelete="OnDeleteEntityAsync" EditItem="@(SelectedEntity ?? new Town())" />

@code {
    protected override Func<TownService, TownService, Task<IEnumerable<Town>>> GetAllEntitysAsyncFunc => (service, unusedService) => service.GetAllAsync();
    protected override Func<TownService, TownService, Task<IReadOnlyList<Town>>> GetAllEntitysReadOnlyAsyncFunc => (service, unusedService) => service.GetAllReadOnlyAsync();
    protected override Func<TownService, Town, Task> AddEntityAsyncFunc => (service, item) => service.AddAsync(item);
    protected override Func<TownService, Town, Task> UpdateEntityAsyncFunc => (service, item) => service.UpdateAsync(item);
    protected override Func<TownService, int, Task> DeleteEntityAsyncFunc => (service, id) => service.DeleteAsync(id);
    protected override int GetEntityId(Town item) => item.Id;
}